################# aws codepipeline get-pipeline --name tf-static-site-GitHub-to-S3 #################

{
    "pipeline": {
        "name": "tf-static-site-GitHub-to-S3",
        "roleArn": "arn:aws:iam::671231939531:role/service-role/CodePipelineServiceRole-tf-static-site-GitHub-to-S3",
        "artifactStore": {
            "type": "S3",
            "location": "codepipeline-eu-central-1-320847271875"
        },
        "stages": [
            {
                "name": "Source",
                "actions": [
                    {
                        "name": "Source",
                        "actionTypeId": {
                            "category": "Source",
                            "owner": "AWS",
                            "provider": "CodeStarSourceConnection",
                            "version": "1"
                        },
                        "runOrder": 1,
                        "configuration": {
                            "BranchName": "main",
                            "ConnectionArn": "arn:aws:codestar-connections:eu-central-1:671231939531:connection/5b3a1626-85fa-4d40-8878-156a4264fe3a",
                            "FullRepositoryId": "OmerMeister/tf-static-site-webcontent",
                            "OutputArtifactFormat": "CODE_ZIP"
                        },
                        "outputArtifacts": [
                            {
                                "name": "SourceArtifact"
                            }
                        ],
                        "inputArtifacts": [],
                        "region": "eu-central-1",
                        "namespace": "SourceVariables"
                    }
                ]
            },
            {
                "name": "Deploy",
                "actions": [
                    {
                        "name": "Deploy",
                        "actionTypeId": {
                            "category": "Deploy",
                            "owner": "AWS",
                            "provider": "S3",
                            "version": "1"
                        },
                        "runOrder": 1,
                        "configuration": {
                            "BucketName": "meister.lol",
                            "Extract": "true"
                        },
                        "outputArtifacts": [],
                        "inputArtifacts": [
                            {
                                "name": "SourceArtifact"
                            }
                        ],
                        "region": "eu-central-1",
                        "namespace": "DeployVariables"
                    }
                ]
            },
            {
                "name": "InvalidateCloudFront",
                "actions": [
                    {
                        "name": "InvalidateCloudFrontLambda",
                        "actionTypeId": {
                            "category": "Invoke",
                            "owner": "AWS",
                            "provider": "Lambda",
                            "version": "1"
                        },
                        "runOrder": 1,
                        "configuration": {
                            "FunctionName": "test123"
                        },
                        "outputArtifacts": [],
                        "inputArtifacts": [],
                        "region": "eu-central-1"
                    }
                ]
            }
        ],
        "version": 7
    },
    "metadata": {
        "pipelineArn": "arn:aws:codepipeline:eu-central-1:671231939531:tf-static-site-GitHub-to-S3",
        "created": "2023-09-29T22:31:24.204000+03:00",
        "updated": "2023-10-01T13:39:48.417000+03:00"
    }
}

#################

create a bucket for the site files and for the pipeline's artifactStore

#################

create GitHub connections
https://eu-north-1.console.aws.amazon.com/codesuite/settings/connections?region=eu-central-1

resource "aws_codestarconnections_connection" "example" {
  name              = "OmerMeister-GitHub"
  provider_type     = "GitHub"
}

output "connection_arn" {
  value = aws_codestarconnections_connection.example.arn
}

#################
lambda function

{
    "Configuration": {
        "FunctionName": "test123",
        "FunctionArn": "arn:aws:lambda:eu-central-1:671231939531:function:test123",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::671231939531:role/service-role/test123-role-p0qrdbtn",
        "Handler": "lambda_function.lambda_handler",
        "CodeSize": 668,
        "Description": "",
        "Timeout": 6,
        "MemorySize": 128,
        "LastModified": "2023-09-30T12:18:47.000+0000",
        "CodeSha256": "Ymm9tOnMxibM1BcFA+7GkOre6Mn3PdH8kK4MRTNff7M=",
        "Version": "$LATEST",
        "TracingConfig": {
            "Mode": "PassThrough"
        },
        "RevisionId": "2b760168-7829-4170-91b1-e50639a44040",
        "State": "Active",
        "LastUpdateStatus": "Successful",
        "PackageType": "Zip",
        "Architectures": [
            "x86_64"
        ],
        "EphemeralStorage": {
            "Size": 512
        },
        "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
        },
        "RuntimeVersionConfig": {
            "RuntimeVersionArn": "arn:aws:lambda:eu-central-1::runtime:2bec9c47bcece63e8c947a42cec566b9154b5b295c3c8a79b46d8c41c286dc0c"
        }
    }
}


#################
cloudfront

{
    "ETag": "E3M9TCGX31EZ6L",
    "Distribution": {
        "Id": "E33JRMUO5XD2GS",
        "ARN": "arn:aws:cloudfront::671231939531:distribution/E33JRMUO5XD2GS",
        "Status": "InProgress",
        "LastModifiedTime": "2023-10-01T11:07:27.074000+00:00",
        "InProgressInvalidationBatches": 0,
        "DomainName": "d2mulffqkkrxvf.cloudfront.net",
        "ActiveTrustedSigners": {
            "Enabled": false,
            "Quantity": 0
        },
        "ActiveTrustedKeyGroups": {
            "Enabled": false,
            "Quantity": 0
        },
        "DistributionConfig": {
            "CallerReference": "cc2771d1-0265-4c17-8a37-cf41e77cd3da",
            "Aliases": {
                "Quantity": 1,
                "Items": [
                    "meister.lol"
                ]
            },
            "DefaultRootObject": "index.html",
            "Origins": {
                "Quantity": 1,
                "Items": [
                    {
                        "Id": "meister.lol.s3-website.eu-central-1.amazonaws.com",
                        "DomainName": "meister.lol.s3.eu-central-1.amazonaws.com",
                        "OriginPath": "",
                        "CustomHeaders": {
                            "Quantity": 0
                        },
                        "S3OriginConfig": {
                            "OriginAccessIdentity": ""
                        },
                        "ConnectionAttempts": 3,
                        "ConnectionTimeout": 10,
                        "OriginShield": {
                            "Enabled": false
                        },
                        "OriginAccessControlId": "E36UE11VZ7SBVC"
                    }
                ]
            },
            "OriginGroups": {
                "Quantity": 0
            },
            "DefaultCacheBehavior": {
                "TargetOriginId": "meister.lol.s3-website.eu-central-1.amazonaws.com",
                "TrustedSigners": {
                    "Enabled": false,
                    "Quantity": 0
                },
                "TrustedKeyGroups": {
                    "Enabled": false,
                    "Quantity": 0
                },
                "ViewerProtocolPolicy": "redirect-to-https",
                "AllowedMethods": {
                    "Quantity": 7,
                    "Items": [
                        "HEAD",
                        "DELETE",
                        "POST",
                        "GET",
                        "OPTIONS",
                        "PUT",
                        "PATCH"
                    ],
                    "CachedMethods": {
                        "Quantity": 2,
                        "Items": [
                            "HEAD",
                            "GET"
                        ]
                    }
                },
                "SmoothStreaming": false,
                "Compress": true,
                "LambdaFunctionAssociations": {
                    "Quantity": 0
                },
                "FunctionAssociations": {
                    "Quantity": 0
                },
                "FieldLevelEncryptionId": "",
                "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6"
            },
            "CacheBehaviors": {
                "Quantity": 0
            },
            "CustomErrorResponses": {
                "Quantity": 1,
                "Items": [
                    {
                        "ErrorCode": 404,
                        "ResponsePagePath": "/error.html",
                        "ResponseCode": "404",
                        "ErrorCachingMinTTL": 1
                    }
                ]
            },
            "Comment": "",
            "Logging": {
                "Enabled": false,
                "IncludeCookies": false,
                "Bucket": "",
                "Prefix": ""
            },
            "PriceClass": "PriceClass_100",
            "Enabled": true,
            "ViewerCertificate": {
                "CloudFrontDefaultCertificate": false,
                "ACMCertificateArn": "arn:aws:acm:us-east-1:671231939531:certificate/b708da75-9abf-477b-b2f1-4831be03368b",
                "SSLSupportMethod": "sni-only",
                "MinimumProtocolVersion": "TLSv1.2_2021",
                "Certificate": "arn:aws:acm:us-east-1:671231939531:certificate/b708da75-9abf-477b-b2f1-4831be03368b",
                "CertificateSource": "acm"
            },
            "Restrictions": {
                "GeoRestriction": {
                    "RestrictionType": "none",
                    "Quantity": 0
                }
            },
            "WebACLId": "",
            "HttpVersion": "http2",
            "IsIPV6Enabled": true,
            "ContinuousDeploymentPolicyId": "",
            "Staging": false
        },
        "AliasICPRecordals": [
            {
                "CNAME": "meister.lol",
                "ICPRecordalStatus": "APPROVED"
            }
        ]
    }
}

###############

aws cloudfront get-origin-access-control-config --id E36UE11VZ7SBVC
{
    "ETag": "ETVPDKIKX0DER",
    "OriginAccessControlConfig": {
        "Name": "meister.lol.s3.eu-central-1.amazonaws.com",
        "Description": "OAC_sign_request",
        "SigningProtocol": "sigv4",
        "SigningBehavior": "always",
        "OriginAccessControlOriginType": "s3"
    }
}